// Root package.json
Project configuration:
<<<CONTENT>>>
{
  "name": "@mixcore/javascript-sdk",
  "private": true,
  "type": "module",
  "version": "0.0.1",
  "description": "Modular, framework-agnostic SDK for Mixcore projects (shared, base, apis)",
  "workspaces": [
    "packages/*"
  ],
  "scripts": {
    "build": "lerna run build --stream",
    "test": "npm run build && lerna run test --stream --scope @mixcore/base --scope @mixcore/shared --scope @mixcore/api --scope @mixcore/config --scope @mixcore/database --scope @mixcore/file --scope @mixcore/template --scope @mixcore/user --scope @mixcore/navigation",
    "lint": "lerna run lint --stream",
    "compile": "tsc --build tsconfig.base.json",
    "type-check": "lerna run type-check --stream"
  },
  "devDependencies": {
    "@jest/types": "^30.0.0",
    "@types/jest": "^30.0.0",
    "@types/node": "^20.0.0",
    "@typescript-eslint/eslint-plugin": "^8.38.0",
    "@typescript-eslint/parser": "^8.38.0",
    "globals": "^16.3.0",
    "jest": "^30.0.5",
    "lerna": "^7.0.0",
    "ts-jest": "^29.4.0",
    "tsup": "^8.5.0",
    "typescript": "^5.8.3"
  },
  "license": "SEE LICENSE IN LICENSE",
  "repository": "https://github.com/mixcore/javascript-sdk",
  "packageManager": "pnpm@8.10.0"
}
<<<END>>>

// tsconfig.base.json
TypeScript configuration:
<<<CONTENT>>>
{
  "compilerOptions": {
    "target": "ES2020",
    "module": "ESNext",
    "declaration": true,
    "declarationMap": true,
    "outDir": "dist",
    "rootDir": ".",
    "strict": false,
    "noImplicitAny": false,
    "esModuleInterop": true,
    "isolatedModules": true,
    "moduleResolution": "node",
    "forceConsistentCasingInFileNames": true,
    "skipLibCheck": true,
    "baseUrl": ".",
    "paths": {
      "@mixcore/api": ["packages/api/dist"],
      "@mixcore/shared": ["packages/shared/dist"],
      "@mixcore/config": ["packages/config/dist"],
      "@mixcore/user": ["packages/user/dist"],
      "@mixcore/template": ["packages/template/dist"],
      "@mixcore/file": ["packages/file/dist"],
      "@mixcore/base": ["packages/base/dist"]
    }
  },
  "exclude": ["node_modules", "dist"]
}
<<<END>>>

// eslint.config.js
ESLint configuration (new format):
<<<CONTENT>>>
import eslint from '@eslint/js';
import tsEslint from '@typescript-eslint/eslint-plugin';
import tsParser from '@typescript-eslint/parser';
import globals from 'globals';

const tsConfig = tsEslint.configs.recommended[0];

export default [
  eslint.configs.recommended,
  {
    ...tsConfig,
    files: ['**/*.ts'],
    languageOptions: {
      parser: tsParser,
      parserOptions: {
        ecmaVersion: 'latest',
        sourceType: 'module'
      },
      globals: {
        ...globals.browser,
        ...globals.node
      }
    },
    ignores: ['dist/', 'node_modules/'],
    rules: {
      // Disable some rules
      'no-unused-vars': 'off',
      '@typescript-eslint/no-unused-vars': 'off',
      'no-undef': 'off',
      
      // Add project-specific rule overrides here
    }
  },
  {
    files: ['**/*.test.ts'],
    languageOptions: {
      globals: {
        describe: 'readonly',
        it: 'readonly',
        expect: 'readonly',
        jest: 'readonly'
      }
    }
  }
];
<<<END>>>

// .eslintrc.js
ESLint configuration (legacy format):
<<<CONTENT>>>
module.exports = {
  extends: [
    'eslint:recommended',
    'plugin:@typescript-eslint/recommended'
  ],
  parser: '@typescript-eslint/parser',
  plugins: ['@typescript-eslint'],
  ignorePatterns: ['dist/', 'node_modules/'],
  rules: {
    // Add project-specific rules here
  }
};
<<<END>>>

// jest.config.ts
Jest testing configuration:
<<<CONTENT>>>
export default {
  preset: 'ts-jest',
  testEnvironment: 'node',
  extensionsToTreatAsEsm: ['.ts'],
  moduleFileExtensions: ['ts', 'js', 'json', 'node'],
  transform: {
    '^.+\\.ts$': [
      'ts-jest',
      {
        useESM: true,
        tsconfig: 'tsconfig.base.json',
      }
    ]
  },
  testMatch: ['**/tests/**/*.test.ts'],
  moduleNameMapper: {
    '^@mixcore/(.*)$': '<rootDir>/packages/$1/src',
    '^(\\.{1,2}/.*)\\.js$': '$1',
  },
  transformIgnorePatterns: [
    'node_modules/(?!(.*\\.mjs$|@mixcore/.*))'
  ]
};
<<<END>>>